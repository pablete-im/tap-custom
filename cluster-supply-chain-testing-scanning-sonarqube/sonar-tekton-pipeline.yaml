---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: sonarqube-pipeline
  namespace: <DEVELOPER NAMESPACE>
spec:
  params:
    - name: repository
      type: string
    - name: revision
      type: string
    - name: project-key
      type: string
  workspaces:
    - name: tmp-workspace
  tasks:
    - name: sonarqube-scan
      taskRef:
        name: sonarqube-scanner
      workspaces:
        - name: tmp-workspace
          workspace: tmp-workspace
      params:
        # We have to pass both the url and the rev because Cartographer
        # expects those from any ClusterSourceTemplate. The TaskRun that
        # gets automatically created will have those parameters ONLY IF
        # we list them here.
        - name: source-url
          value: $(params.repository)   # this comes from the 'params' in the spec above ^
        - name: source-revision
          value: $(params.revision)     # This one, too
        - name: SONAR_PROJECT_KEY
          value: $(params.project-key)
    - name: mail-update-task
      runAfter:
        - sonarqube-scan
      taskRef:
        name: sendmail
      params:
        # We have to pass both the url and the rev because Cartographer
        # expects those from any ClusterSourceTemplate. The TaskRun that
        # gets automatically created will have those parameters ONLY IF
        # we list them here.
        - name: source-url
          value: $(params.repository)   # this comes from the 'params' in the spec above ^
        - name: source-revision
          value: $(params.revision)     # This one, too    
        - name: PROJECT_KEY
          value: $(params.project-key)
        - name: body
          value: "SonarQube scanner completed successfully. Quality gate OK!"

    